<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>at.forsyte.apalache</groupId>
    <artifactId>apalache</artifactId>
    <packaging>pom</packaging>
    <version>0.8.2-SNAPSHOT</version>

    <name>APALACHE project</name>
    <url>https://github.com/informalsystems/apalache</url>

    <properties>
        <scalaVersion>2.12.12</scalaVersion>
        <scalaBinaryVersion>2.12</scalaBinaryVersion>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <scoverage.plugin.version>1.4.1</scoverage.plugin.version>
        <scoverage.aggregate>true</scoverage.aggregate>
        <logback.version>1.2.3</logback.version>
    </properties>

    <repositories>
        <repository>
            <id>oss-sonatype</id>
            <name>oss-sonatype</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>
    
    <modules>
        <!-- intermediate representation (IR) -->
        <module>tlair</module>
        <!-- defines the basic infrastructure: logging, passes, etc. -->
        <module>mod-infra</module>
        <!-- parsing with SANY and build an IR -->
        <module>tla-import</module>
        <!-- all kinds of preprocessing -->
        <module>tla-pp</module>
        <!-- finding types -->
        <module>tla-types</module>
        <!-- finding symbolic transitions -->
        <module>tla-assignments</module>
        <!-- bounded model checker modulo theory -->
        <module>tla-bmcmt</module>
        <!-- command line tools -->
        <module>mod-tool</module>
        <!-- distribution packaging to bind them all -->
        <module>mod-distribution</module>
    </modules>

    <!-- shared dependencies are set up here, use them in the submodules -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-library</artifactId>
                <version>${scalaVersion}</version>
            </dependency>
            <dependency>
                <groupId>com.google.inject</groupId>
                <artifactId>guice</artifactId>
                <version>4.2.3</version>
            </dependency>

            <!-- Logging -->
            <!-- This dependency configuration is to prevent
                 http://www.slf4j.org/codes.html#StaticLoggerBinder
                 See https://stackoverflow.com/a/56089477/1187277 -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>

            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${logback.version}</version>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>1.7.30</version>
            </dependency>

            <dependency>
                <groupId>com.typesafe.scala-logging</groupId>
                <artifactId>scala-logging_${scalaBinaryVersion}</artifactId>
                <version>3.9.2</version>
            </dependency>

            <dependency>
                <groupId>org.scala-lang.modules</groupId>
                <artifactId>scala-parser-combinators_${scalaBinaryVersion}</artifactId>
                <version>1.1.2</version>
            </dependency>

            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.13.1</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest_${scalaBinaryVersion}</artifactId>
                <version>3.0.1</version>
                <scope>test</scope>
            </dependency>
            <!--
             check this page: http://www.scalatest.org/user_guide/testing_with_mock_objects#jMock
            -->
            <dependency>
                <groupId>org.easymock</groupId>
                <artifactId>easymock</artifactId>
                <version>4.2</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.lamport</groupId>
                <artifactId>tla2tools</artifactId>
                <version>1.7.0-SNAPSHOT</version>
            </dependency>

            <!-- Z3-TurnKey provides Z3 and the integration of its Java API in
                 a portable way. See https://github.com/tudo-aqua/z3-turnkey -->
            <dependency>
                <groupId>io.github.tudo-aqua</groupId>
                <artifactId>z3-turnkey</artifactId>
                <version>4.8.7.1</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <!-- plugin settings for the modules -->
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>net.alchim31.maven</groupId>
                    <artifactId>scala-maven-plugin</artifactId>
                    <version>4.4.0</version>

                    <executions>
                        <execution>
                            <id>scala-compile-first</id>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>add-source</goal>
                                <goal>compile</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>scala-test-compile</id>
                            <phase>process-test-resources</phase>
                            <goals>
                                <goal>testCompile</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <args>
                            <!-- work-around for https://issues.scala-lang.org/browse/SI-8358 -->
                            <arg>-nobootcp</arg>
                        </args>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.1</version>
                    <configuration>
                        <source>1.8</source>
                        <target>1.8</target>
                    </configuration>

                    <executions>
                        <execution>
                            <phase>compile</phase>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                        </execution>
                    </executions>

                </plugin>
                <!--
                 A plugin to build a distribution package, check:
         https://maven.apache.org/plugins/maven-assembly-plugin/examples/multimodule/module-binary-inclusion-simple.html
                -->
                <plugin>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>3.3.0</version>
                    <configuration>
                        <descriptors>
                            <descriptor>src/assembly/bin.xml</descriptor>
                        </descriptors>
                        <archive>
                            <manifest>
                                <!-- this is the main entry point for all of our command tools -->
                                <mainClass>at.forsyte.apalache.tla.Tool</mainClass>
                            </manifest>
                        </archive>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>single</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- write the version number in MANIFEST.MF -->
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <configuration>
                        <archive>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.scoverage</groupId>
                    <artifactId>scoverage-maven-plugin</artifactId>
                    <version>${scoverage.plugin.version}</version>
                    <configuration>
                        <scalaVersion>${scalaBinaryVersion}</scalaVersion>
                        <!-- other parameters -->
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>report</goal> <!-- or integration-check -->
                            </goals>
                            <phase>prepare-package</phase> <!-- or any other phase -->
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

        <!-- plugin settings for the parent module itself -->
        <plugins>
            <!-- compile scala and java code -->
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>

                <executions>
                    <execution>
                        <id>scala-compile-first</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>add-source</goal>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>scala-test-compile</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <args>
                        <!-- work-around for https://issues.scala-lang.org/browse/SI-8358 -->
                        <arg>-nobootcp</arg>
                    </args>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--
                Find conflicting versions of the libraries by running mvn enforcer:enforce

                https://www.ricston.com/blog/solving-dependency-conflicts-maven/
             -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.4.1</version>
                <configuration>
                    <rules><dependencyConvergence /></rules>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.scoverage</groupId>
                <artifactId>scoverage-maven-plugin</artifactId>
                <version>${scoverage.plugin.version}</version>
                <configuration>
                    <scalaVersion>${scalaBinaryVersion}</scalaVersion>
                    <!-- other parameters -->
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>report</goal> <!-- or integration-check -->
                        </goals>
                        <phase>prepare-package</phase> <!-- or any other phase -->
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.scoverage</groupId>
                <artifactId>scoverage-maven-plugin</artifactId>
                <version>${scoverage.plugin.version}</version>
                <configuration>
                    <aggregate>true</aggregate>
                    <highlighting>true</highlighting>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>report</report>  <!-- integration-report, report-only -->
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>

</project>
