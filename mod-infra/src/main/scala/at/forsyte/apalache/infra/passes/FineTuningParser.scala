package at.forsyte.apalache.infra.passes

import java.util.regex.{Pattern, PatternSyntaxException}
import scala.collection.immutable

trait ConfigFieldType

case class StringFieldType() extends ConfigFieldType
case class UnsignedIntFieldType() extends ConfigFieldType
case class IntFieldType() extends ConfigFieldType
case class BoolFieldType() extends ConfigFieldType
case class DoubleFieldType() extends ConfigFieldType
case class EnumFieldType(values: String*) extends ConfigFieldType

case class RegexFieldType() extends ConfigFieldType

/**
 * A configuration class that mirrors the parameters that can be passed via `--tuning-options-file` and
 * `--tuning-options` to the commands `check` and `simulate`. This class serves as a data schema for the tuning options,
 * which should be properly parsed by [[https://pureconfig.github.io/docs/index.html PureConfig]].
 *
 * @see
 *   [[https://apalache-mc.org/docs/apalache/tuning.html Tuning parameters]].
 * @author
 *   Igor Konnov, 2024
 */
object FineTuningParser {
  val fieldTypes: Map[String, ConfigFieldType] = immutable.Map(
      "search.invariant.mode" -> EnumFieldType("before", "after"),
      "search.transitionFilter" -> RegexFieldType(),
      "search.invariantFilter" -> RegexFieldType(),
      "rewriter.shortCircuit" -> BoolFieldType(),
      // For the parameters starting with "z3.", see:
      // https://microsoft.github.io/z3guide/programming/Parameters/
      // Some of the fine-tuning parameters of Z3 are irrelevant for Apalache.
      // We only omitted the parameters for the theories that are clearly not used by Apalache.
      // To refresh the list of the z3 parameters, print the parameters with "z3 -p" and ask ChatGPT to update them.
      // Double-check the enums though, as "z3 -p" only shows the default values.
      "z3.auto_config" -> BoolFieldType(),
      "z3.debug_ref_count" -> BoolFieldType(),
      "z3.dot_proof_file" -> StringFieldType(),
      "z3.dump_models" -> BoolFieldType(),
      "z3.encoding" -> StringFieldType(),
      "z3.memory_high_watermark" -> UnsignedIntFieldType(),
      "z3.memory_high_watermark_mb" -> UnsignedIntFieldType(),
      "z3.memory_max_alloc_count" -> UnsignedIntFieldType(),
      "z3.memory_max_size" -> UnsignedIntFieldType(),
      "z3.model" -> BoolFieldType(),
      "z3.model_validate" -> BoolFieldType(),
      "z3.proof" -> BoolFieldType(),
      "z3.rlimit" -> UnsignedIntFieldType(),
      "z3.smtlib2_compliant" -> BoolFieldType(),
      "z3.stats" -> BoolFieldType(),
      "z3.timeout" -> UnsignedIntFieldType(),
      "z3.trace" -> BoolFieldType(),
      "z3.trace_file_name" -> StringFieldType(),
      "z3.type_check" -> BoolFieldType(),
      "z3.unsat_core" -> BoolFieldType(),
      "z3.verbose" -> UnsignedIntFieldType(),
      "z3.warning" -> BoolFieldType(),
      "z3.well_sorted_check" -> BoolFieldType(),
      "z3.pi.arith" -> UnsignedIntFieldType(),
      "z3.pi.arith_weight" -> UnsignedIntFieldType(),
      "z3.pi.block_loop_patterns" -> BoolFieldType(),
      "z3.pi.max_multi_patterns" -> UnsignedIntFieldType(),
      "z3.pi.non_nested_arith_weight" -> UnsignedIntFieldType(),
      "z3.pi.pull_quantifiers" -> BoolFieldType(),
      "z3.pi.use_database" -> BoolFieldType(),
      "z3.pi.warnings" -> BoolFieldType(),
      "z3.tactic.blast_term_ite.max_inflation" -> UnsignedIntFieldType(),
      "z3.tactic.blast_term_ite.max_steps" -> UnsignedIntFieldType(),
      "z3.tactic.default_tactic" -> StringFieldType(),
      "z3.tactic.propagate_values.max_rounds" -> UnsignedIntFieldType(),
      "z3.tactic.solve_eqs.context_solve" -> BoolFieldType(),
      "z3.tactic.solve_eqs.ite_solver" -> BoolFieldType(),
      "z3.tactic.solve_eqs.max_occs" -> UnsignedIntFieldType(),
      "z3.tactic.solve_eqs.theory_solver" -> BoolFieldType(),
      "z3.pp.bounded" -> BoolFieldType(),
      "z3.pp.bv_literals" -> BoolFieldType(),
      "z3.pp.bv_neg" -> BoolFieldType(),
      "z3.pp.decimal" -> BoolFieldType(),
      "z3.pp.decimal_precision" -> UnsignedIntFieldType(),
      "z3.pp.fixed_indent" -> BoolFieldType(),
      "z3.pp.flat_assoc" -> BoolFieldType(),
      "z3.pp.fp_real_literals" -> BoolFieldType(),
      "z3.pp.max_depth" -> UnsignedIntFieldType(),
      "z3.pp.max_indent" -> UnsignedIntFieldType(),
      "z3.pp.max_num_lines" -> UnsignedIntFieldType(),
      "z3.pp.max_ribbon" -> UnsignedIntFieldType(),
      "z3.pp.max_width" -> UnsignedIntFieldType(),
      "z3.pp.min_alias_size" -> UnsignedIntFieldType(),
      "z3.pp.pretty_proof" -> BoolFieldType(),
      "z3.pp.simplify_implies" -> BoolFieldType(),
      "z3.pp.single_line" -> BoolFieldType(),
      "z3.sat.abce" -> BoolFieldType(),
      "z3.sat.acce" -> BoolFieldType(),
      "z3.sat.anf" -> BoolFieldType(),
      "z3.sat.anf.delay" -> UnsignedIntFieldType(),
      "z3.sat.anf.exlin" -> BoolFieldType(),
      "z3.sat.asymm_branch" -> BoolFieldType(),
      "z3.sat.asymm_branch.all" -> BoolFieldType(),
      "z3.sat.asymm_branch.delay" -> UnsignedIntFieldType(),
      "z3.sat.asymm_branch.limit" -> UnsignedIntFieldType(),
      "z3.sat.asymm_branch.rounds" -> UnsignedIntFieldType(),
      "z3.sat.asymm_branch.sampled" -> BoolFieldType(),
      "z3.sat.ate" -> BoolFieldType(),
      "z3.sat.backtrack.conflicts" -> UnsignedIntFieldType(),
      "z3.sat.backtrack.scopes" -> UnsignedIntFieldType(),
      "z3.sat.bca" -> BoolFieldType(),
      "z3.sat.bce" -> BoolFieldType(),
      "z3.sat.bce_at" -> UnsignedIntFieldType(),
      "z3.sat.bce_delay" -> UnsignedIntFieldType(),
      "z3.sat.binspr" -> BoolFieldType(),
      "z3.sat.blocked_clause_limit" -> UnsignedIntFieldType(),
      "z3.sat.branching.anti_exploration" -> BoolFieldType(),
      "z3.sat.branching.heuristic" -> EnumFieldType("vsids", "chb"),
      "z3.sat.burst_search" -> UnsignedIntFieldType(),
      "z3.sat.cardinality.encoding" -> EnumFieldType("grouped", "bimander", "ordered", "unate", "circuit"),
      "z3.sat.cardinality.solver" -> BoolFieldType(),
      "z3.sat.cce" -> BoolFieldType(),
      "z3.sat.core.minimize" -> BoolFieldType(),
      "z3.sat.core.minimize_partial" -> BoolFieldType(),
      "z3.sat.cut" -> BoolFieldType(),
      "z3.sat.cut.aig" -> BoolFieldType(),
      "z3.sat.cut.delay" -> UnsignedIntFieldType(),
      "z3.sat.cut.dont_cares" -> BoolFieldType(),
      "z3.sat.cut.force" -> BoolFieldType(),
      "z3.sat.cut.lut" -> BoolFieldType(),
      "z3.sat.cut.npn3" -> BoolFieldType(),
      "z3.sat.cut.redundancies" -> BoolFieldType(),
      "z3.sat.cut.xor" -> BoolFieldType(),
      "z3.sat.ddfw.init_clause_weight" -> UnsignedIntFieldType(),
      "z3.sat.ddfw.reinit_base" -> UnsignedIntFieldType(),
      "z3.sat.ddfw.restart_base" -> UnsignedIntFieldType(),
      "z3.sat.ddfw.threads" -> UnsignedIntFieldType(),
      "z3.sat.ddfw.use_reward_pct" -> UnsignedIntFieldType(),
      "z3.sat.ddfw_search" -> BoolFieldType(),
      "z3.sat.dimacs.core" -> BoolFieldType(),
      "z3.sat.drat.activity" -> BoolFieldType(),
      "z3.sat.drat.binary" -> BoolFieldType(),
      "z3.sat.drat.check_sat" -> BoolFieldType(),
      "z3.sat.drat.check_unsat" -> BoolFieldType(),
      "z3.sat.drat.disable" -> BoolFieldType(),
      "z3.sat.drat.file" -> StringFieldType(),
      "z3.sat.dyn_sub_res" -> BoolFieldType(),
      "z3.sat.elim_vars" -> BoolFieldType(),
      "z3.sat.elim_vars_bdd" -> BoolFieldType(),
      "z3.sat.elim_vars_bdd_delay" -> UnsignedIntFieldType(),
      "z3.sat.enable_pre_simplify" -> BoolFieldType(),
      "z3.sat.euf" -> BoolFieldType(),
      "z3.sat.force_cleanup" -> BoolFieldType(),
      "z3.sat.gc" -> EnumFieldType("psm", "glue", "glue_psm", "dyn_psm"),
      "z3.sat.gc.burst" -> BoolFieldType(),
      "z3.sat.gc.defrag" -> BoolFieldType(),
      "z3.sat.gc.increment" -> UnsignedIntFieldType(),
      "z3.sat.gc.initial" -> UnsignedIntFieldType(),
      "z3.sat.gc.k" -> UnsignedIntFieldType(),
      "z3.sat.gc.small_lbd" -> UnsignedIntFieldType(),
      "z3.sat.inprocess.max" -> UnsignedIntFieldType(),
      "z3.sat.inprocess.out" -> StringFieldType(),
      "z3.sat.local_search" -> BoolFieldType(),
      "z3.sat.local_search_dbg_flips" -> BoolFieldType(),
      "z3.sat.local_search_mode" -> EnumFieldType("wsat", "qsat"),
      "z3.sat.local_search_threads" -> UnsignedIntFieldType(),
      "z3.sat.lookahead.cube.cutoff" -> EnumFieldType("depth", "freevars", "psat", "adaptive_freevars",
          "adaptive_psat"),
      "z3.sat.lookahead.cube.depth" -> UnsignedIntFieldType(),
      "z3.sat.lookahead.cube.fraction" -> DoubleFieldType(),
      "z3.sat.lookahead.cube.freevars" -> DoubleFieldType(),
      "z3.sat.lookahead.cube.psat.clause_base" -> DoubleFieldType(),
      "z3.sat.lookahead.cube.psat.trigger" -> DoubleFieldType(),
      "z3.sat.lookahead.cube.psat.var_exp" -> DoubleFieldType(),
      "z3.sat.lookahead.delta_fraction" -> DoubleFieldType(),
      "z3.sat.lookahead.double" -> BoolFieldType(),
      "z3.sat.lookahead.global_autarky" -> BoolFieldType(),
      "z3.sat.lookahead.preselect" -> BoolFieldType(),
      "z3.sat.lookahead.reward" -> EnumFieldType("march_cu", "ternary", "heule_schur", "heuleu", "unit"),
      "z3.sat.lookahead.use_learned" -> BoolFieldType(),
      "z3.sat.lookahead_scores" -> BoolFieldType(),
      "z3.sat.lookahead_simplify" -> BoolFieldType(),
      "z3.sat.lookahead_simplify.bca" -> BoolFieldType(),
      "z3.sat.max_conflicts" -> UnsignedIntFieldType(),
      "z3.sat.max_memory" -> UnsignedIntFieldType(),
      "z3.sat.minimize_lemmas" -> BoolFieldType(),
      "z3.sat.override_incremental" -> BoolFieldType(),
      "z3.sat.pb.lemma_format" -> EnumFieldType("cardinality", "lemmas"),
      "z3.sat.pb.min_arity" -> UnsignedIntFieldType(),
      "z3.sat.pb.resolve" -> EnumFieldType("cardinality", "rounding"),
      "z3.sat.pb.solver" -> EnumFieldType("solver", "circuit", "sorting", "totalizer", "binary_merge", "segmented"),
      "z3.sat.phase" -> EnumFieldType("caching", "always_false", "always_true", "basic_caching", "random"),
      "z3.sat.phase.sticky" -> BoolFieldType(),
      "z3.sat.prob_search" -> BoolFieldType(),
      "z3.sat.probing" -> BoolFieldType(),
      "z3.sat.probing_binary" -> BoolFieldType(),
      "z3.sat.probing_cache" -> BoolFieldType(),
      "z3.sat.probing_cache_limit" -> UnsignedIntFieldType(),
      "z3.sat.probing_limit" -> UnsignedIntFieldType(),
      "z3.sat.propagate.prefetch" -> BoolFieldType(),
      "z3.sat.random_freq" -> DoubleFieldType(),
      "z3.sat.random_seed" -> UnsignedIntFieldType(),
      "z3.sat.reorder.activity_scale" -> UnsignedIntFieldType(),
      "z3.sat.reorder.base" -> UnsignedIntFieldType(),
      "z3.sat.reorder.itau" -> DoubleFieldType(),
      "z3.sat.rephase.base" -> UnsignedIntFieldType(),
      "z3.sat.resolution.cls_cutoff1" -> UnsignedIntFieldType(),
      "z3.sat.resolution.cls_cutoff2" -> UnsignedIntFieldType(),
      "z3.sat.resolution.limit" -> UnsignedIntFieldType(),
      "z3.sat.resolution.lit_cutoff_range1" -> UnsignedIntFieldType(),
      "z3.sat.resolution.lit_cutoff_range2" -> UnsignedIntFieldType(),
      "z3.sat.resolution.lit_cutoff_range3" -> UnsignedIntFieldType(),
      "z3.sat.resolution.occ_cutoff" -> UnsignedIntFieldType(),
      "z3.sat.resolution.occ_cutoff_range1" -> UnsignedIntFieldType(),
      "z3.sat.resolution.occ_cutoff_range2" -> UnsignedIntFieldType(),
      "z3.sat.resolution.occ_cutoff_range3" -> UnsignedIntFieldType(),
      "z3.sat.restart" -> EnumFieldType("static", "luby", "ema", "geometric"),
      "z3.sat.restart.emafastglue" -> DoubleFieldType(),
      "z3.sat.restart.emaslowglue" -> DoubleFieldType(),
      "z3.sat.restart.factor" -> DoubleFieldType(),
      "z3.sat.restart.fast" -> BoolFieldType(),
      "z3.sat.restart.initial" -> UnsignedIntFieldType(),
      "z3.sat.restart.margin" -> DoubleFieldType(),
      "z3.sat.restart.max" -> UnsignedIntFieldType(),
      "z3.sat.retain_blocked_clauses" -> BoolFieldType(),
      "z3.sat.scc" -> BoolFieldType(),
      "z3.sat.scc.tr" -> BoolFieldType(),
      "z3.sat.search.sat.conflicts" -> UnsignedIntFieldType(),
      "z3.sat.search.unsat.conflicts" -> UnsignedIntFieldType(),
      "z3.sat.simplify.delay" -> UnsignedIntFieldType(),
      "z3.sat.smt" -> BoolFieldType(),
      "z3.sat.smt.proof.check" -> BoolFieldType(),
      "z3.sat.subsumption" -> BoolFieldType(),
      "z3.sat.subsumption.limit" -> UnsignedIntFieldType(),
      "z3.sat.threads" -> UnsignedIntFieldType(),
      "z3.sat.variable_decay" -> UnsignedIntFieldType(),
      "z3.model.compact" -> BoolFieldType(),
      "z3.model.completion" -> BoolFieldType(),
      "z3.model.inline_def" -> BoolFieldType(),
      "z3.model.partial" -> BoolFieldType(),
      "z3.model.user_functions" -> BoolFieldType(),
      "z3.model.v1" -> BoolFieldType(),
      "z3.model.v2" -> BoolFieldType(),
      "z3.solver.axioms2files" -> BoolFieldType(),
      "z3.solver.cancel_backup_file" -> StringFieldType(),
      "z3.solver.instantiations2console" -> BoolFieldType(),
      "z3.solver.lemmas2console" -> BoolFieldType(),
      "z3.solver.proof.check" -> BoolFieldType(),
      "z3.solver.proof.check_rup" -> BoolFieldType(),
      "z3.solver.proof.log" -> StringFieldType(),
      "z3.solver.proof.save" -> BoolFieldType(),
      "z3.solver.proof.trim" -> BoolFieldType(),
      "z3.solver.smtlib2_log" -> StringFieldType(),
      "z3.solver.timeout" -> UnsignedIntFieldType(),
      "z3.opt.dump_benchmarks" -> BoolFieldType(),
      "z3.opt.dump_models" -> BoolFieldType(),
      "z3.opt.elim_01" -> BoolFieldType(),
      "z3.opt.enable_core_rotate" -> BoolFieldType(),
      "z3.opt.enable_lns" -> BoolFieldType(),
      "z3.opt.enable_sat" -> BoolFieldType(),
      "z3.opt.enable_sls" -> BoolFieldType(),
      "z3.opt.incremental" -> BoolFieldType(),
      "z3.opt.lns_conflicts" -> UnsignedIntFieldType(),
      "z3.opt.maxlex.enable" -> BoolFieldType(),
      "z3.opt.maxres.add_upper_bound_block" -> BoolFieldType(),
      "z3.opt.maxres.hill_climb" -> BoolFieldType(),
      "z3.opt.maxres.max_core_size" -> UnsignedIntFieldType(),
      "z3.opt.maxres.max_correction_set_size" -> UnsignedIntFieldType(),
      "z3.opt.maxres.max_num_cores" -> UnsignedIntFieldType(),
      "z3.opt.maxres.maximize_assignment" -> BoolFieldType(),
      "z3.opt.maxres.pivot_on_correction_set" -> BoolFieldType(),
      "z3.opt.maxres.wmax" -> BoolFieldType(),
      "z3.opt.maxsat_engine" -> EnumFieldType("core_maxsat", "wmax", "maxres", "pd-maxres", "maxres-bin", "rc2"),
      "z3.opt.optsmt_engine" -> EnumFieldType("basic", "symba"),
      "z3.opt.pb.compile_equality" -> BoolFieldType(),
      "z3.opt.pp.neat" -> BoolFieldType(),
      "z3.opt.pp.wcnf" -> BoolFieldType(),
      "z3.opt.priority" -> EnumFieldType("lex", "pareto", "box"),
      "z3.opt.rc2.totalizer" -> BoolFieldType(),
      "z3.opt.rlimit" -> UnsignedIntFieldType(),
      "z3.opt.solution_prefix" -> StringFieldType(),
      "z3.opt.timeout" -> UnsignedIntFieldType(),
      "z3.parallel.conquer.backtrack_frequency" -> UnsignedIntFieldType(),
      "z3.parallel.conquer.batch_size" -> UnsignedIntFieldType(),
      "z3.parallel.conquer.delay" -> UnsignedIntFieldType(),
      "z3.parallel.conquer.restart.max" -> UnsignedIntFieldType(),
      "z3.parallel.enable" -> BoolFieldType(),
      "z3.parallel.simplify.exp" -> DoubleFieldType(),
      "z3.parallel.simplify.inprocess.max" -> UnsignedIntFieldType(),
      "z3.parallel.simplify.max_conflicts" -> UnsignedIntFieldType(),
      "z3.parallel.simplify.restart.max" -> UnsignedIntFieldType(),
      "z3.parallel.threads.max" -> UnsignedIntFieldType(),
      "z3.nnf.ignore_labels" -> BoolFieldType(),
      "z3.nnf.max_memory" -> UnsignedIntFieldType(),
      "z3.nnf.mode" -> EnumFieldType("skolem", "quantifiers", "full"),
      "z3.nnf.sk_hack" -> BoolFieldType(),
      "z3.algebraic.factor" -> BoolFieldType(),
      "z3.algebraic.factor_max_prime" -> UnsignedIntFieldType(),
      "z3.algebraic.factor_num_primes" -> UnsignedIntFieldType(),
      "z3.algebraic.factor_search_size" -> UnsignedIntFieldType(),
      "z3.algebraic.min_mag" -> UnsignedIntFieldType(),
      "z3.algebraic.zero_accuracy" -> UnsignedIntFieldType(),
      "z3.combined_solver.ignore_solver1" -> BoolFieldType(),
      "z3.combined_solver.solver2_timeout" -> UnsignedIntFieldType(),
      "z3.combined_solver.solver2_unknown" -> UnsignedIntFieldType(),
      "z3.ackermannization.eager" -> BoolFieldType(),
      "z3.ackermannization.inc_sat_backend" -> BoolFieldType(),
      "z3.ackermannization.sat_backend" -> BoolFieldType(),
      "z3.nlsat.check_lemmas" -> BoolFieldType(),
      "z3.nlsat.factor" -> BoolFieldType(),
      "z3.nlsat.inline_vars" -> BoolFieldType(),
      "z3.nlsat.lazy" -> UnsignedIntFieldType(),
      "z3.nlsat.log_lemmas" -> BoolFieldType(),
      "z3.nlsat.max_conflicts" -> UnsignedIntFieldType(),
      "z3.nlsat.max_memory" -> UnsignedIntFieldType(),
      "z3.nlsat.minimize_conflicts" -> BoolFieldType(),
      "z3.nlsat.randomize" -> BoolFieldType(),
      "z3.nlsat.reorder" -> BoolFieldType(),
      "z3.nlsat.seed" -> UnsignedIntFieldType(),
      "z3.nlsat.shuffle_vars" -> BoolFieldType(),
      "z3.nlsat.simplify_conflicts" -> BoolFieldType(),
      "z3.rewriter.algebraic_number_evaluator" -> BoolFieldType(),
      "z3.rewriter.arith_ineq_lhs" -> BoolFieldType(),
      "z3.rewriter.arith_lhs" -> BoolFieldType(),
      "z3.rewriter.bit2bool" -> BoolFieldType(),
      "z3.rewriter.blast_distinct" -> BoolFieldType(),
      "z3.rewriter.blast_distinct_threshold" -> UnsignedIntFieldType(),
      "z3.rewriter.blast_eq_value" -> BoolFieldType(),
      "z3.rewriter.blast_select_store" -> BoolFieldType(),
      "z3.rewriter.bv_extract_prop" -> BoolFieldType(),
      "z3.rewriter.bv_ineq_consistency_test_max" -> UnsignedIntFieldType(),
      "z3.rewriter.bv_ite2id" -> BoolFieldType(),
      "z3.rewriter.bv_le2extract" -> BoolFieldType(),
      "z3.rewriter.bv_le_extra" -> BoolFieldType(),
      "z3.rewriter.bv_not_simpl" -> BoolFieldType(),
      "z3.rewriter.bv_sort_ac" -> BoolFieldType(),
      "z3.rewriter.cache_all" -> BoolFieldType(),
      "z3.rewriter.coalesce_chars" -> BoolFieldType(),
      "z3.rewriter.div0_ackermann_limit" -> UnsignedIntFieldType(),
      "z3.rewriter.elim_and" -> BoolFieldType(),
      "z3.rewriter.elim_ite" -> BoolFieldType(),
      "z3.rewriter.elim_rem" -> BoolFieldType(),
      "z3.rewriter.elim_sign_ext" -> BoolFieldType(),
      "z3.rewriter.elim_to_real" -> BoolFieldType(),
      "z3.rewriter.enable_der" -> BoolFieldType(),
      "z3.rewriter.eq2ineq" -> BoolFieldType(),
      "z3.rewriter.expand_nested_stores" -> BoolFieldType(),
      "z3.rewriter.expand_power" -> BoolFieldType(),
      "z3.rewriter.expand_select_ite" -> BoolFieldType(),
      "z3.rewriter.expand_select_store" -> BoolFieldType(),
      "z3.rewriter.expand_store_eq" -> BoolFieldType(),
      "z3.rewriter.expand_tan" -> BoolFieldType(),
      "z3.rewriter.flat" -> BoolFieldType(),
      "z3.rewriter.flat_and_or" -> BoolFieldType(),
      "z3.rewriter.gcd_rounding" -> BoolFieldType(),
      "z3.rewriter.hi_div0" -> BoolFieldType(),
      "z3.rewriter.hi_fp_unspecified" -> BoolFieldType(),
      "z3.rewriter.hoist_ite" -> BoolFieldType(),
      "z3.rewriter.hoist_mul" -> BoolFieldType(),
      "z3.rewriter.ignore_patterns_on_ground_qbody" -> BoolFieldType(),
      "z3.rewriter.ite_extra_rules" -> BoolFieldType(),
      "z3.rewriter.local_ctx" -> BoolFieldType(),
      "z3.rewriter.local_ctx_limit" -> UnsignedIntFieldType(),
      "z3.rewriter.max_degree" -> UnsignedIntFieldType(),
      "z3.rewriter.max_memory" -> UnsignedIntFieldType(),
      "z3.rewriter.max_steps" -> UnsignedIntFieldType(),
      "z3.rewriter.mul2concat" -> BoolFieldType(),
      "z3.rewriter.mul_to_power" -> BoolFieldType(),
      "z3.rewriter.pull_cheap_ite" -> BoolFieldType(),
      "z3.rewriter.push_ite_arith" -> BoolFieldType(),
      "z3.rewriter.push_ite_bv" -> BoolFieldType(),
      "z3.rewriter.push_to_real" -> BoolFieldType(),
      "z3.rewriter.rewrite_patterns" -> BoolFieldType(),
      "z3.rewriter.som" -> BoolFieldType(),
      "z3.rewriter.som_blowup" -> UnsignedIntFieldType(),
      "z3.rewriter.sort_disjunctions" -> BoolFieldType(),
      "z3.rewriter.sort_store" -> BoolFieldType(),
      "z3.rewriter.sort_sums" -> BoolFieldType(),
      "z3.rewriter.split_concat_eq" -> BoolFieldType(),
      "z3.smt.arith.auto_config_simplex" -> BoolFieldType(),
      "z3.smt.arith.bprop_on_pivoted_rows" -> BoolFieldType(),
      "z3.smt.arith.branch_cut_ratio" -> UnsignedIntFieldType(),
      "z3.smt.arith.dump_lemmas" -> BoolFieldType(),
      "z3.smt.arith.eager_eq_axioms" -> BoolFieldType(),
      "z3.smt.arith.enable_hnf" -> BoolFieldType(),
      "z3.smt.arith.greatest_error_pivot" -> BoolFieldType(),
      "z3.smt.arith.ignore_int" -> BoolFieldType(),
      "z3.smt.arith.int_eq_branch" -> BoolFieldType(),
      "z3.smt.arith.min" -> BoolFieldType(),
      "z3.smt.arith.nl" -> BoolFieldType(),
      "z3.smt.arith.nl.branching" -> BoolFieldType(),
      "z3.smt.arith.nl.cross_nested" -> BoolFieldType(),
      "z3.smt.arith.nl.delay" -> UnsignedIntFieldType(),
      "z3.smt.arith.nl.expensive_patching" -> BoolFieldType(),
      "z3.smt.arith.nl.expp" -> BoolFieldType(),
      "z3.smt.arith.nl.gr_q" -> UnsignedIntFieldType(),
      "z3.smt.arith.nl.grobner" -> BoolFieldType(),
      "z3.smt.arith.nl.grobner_cnfl_to_report" -> UnsignedIntFieldType(),
      "z3.smt.arith.nl.grobner_eqs_growth" -> UnsignedIntFieldType(),
      "z3.smt.arith.nl.grobner_expr_degree_growth" -> UnsignedIntFieldType(),
      "z3.smt.arith.nl.grobner_expr_size_growth" -> UnsignedIntFieldType(),
      "z3.smt.arith.nl.grobner_frequency" -> UnsignedIntFieldType(),
      "z3.smt.arith.nl.grobner_max_simplified" -> UnsignedIntFieldType(),
      "z3.smt.arith.nl.grobner_row_length_limit" -> UnsignedIntFieldType(),
      "z3.smt.arith.nl.grobner_subs_fixed" -> UnsignedIntFieldType(),
      "z3.smt.arith.nl.horner" -> BoolFieldType(),
      "z3.smt.arith.nl.horner_frequency" -> UnsignedIntFieldType(),
      "z3.smt.arith.nl.horner_row_length_limit" -> UnsignedIntFieldType(),
      "z3.smt.arith.nl.horner_subs_fixed" -> UnsignedIntFieldType(),
      "z3.smt.arith.nl.nra" -> BoolFieldType(),
      "z3.smt.arith.nl.optimize_bounds" -> BoolFieldType(),
      "z3.smt.arith.nl.order" -> BoolFieldType(),
      "z3.smt.arith.nl.propagate_linear_monomials" -> BoolFieldType(),
      "z3.smt.arith.nl.rounds" -> UnsignedIntFieldType(),
      "z3.smt.arith.nl.tangents" -> BoolFieldType(),
      "z3.smt.arith.print_ext_var_names" -> BoolFieldType(),
      "z3.smt.arith.print_stats" -> BoolFieldType(),
      "z3.smt.arith.propagate_eqs" -> BoolFieldType(),
      "z3.smt.arith.propagation_mode" -> UnsignedIntFieldType(),
      "z3.smt.arith.random_initial_value" -> BoolFieldType(),
      "z3.smt.arith.rep_freq" -> UnsignedIntFieldType(),
      "z3.smt.arith.simplex_strategy" -> UnsignedIntFieldType(),
      "z3.smt.arith.solver" -> UnsignedIntFieldType(),
      "z3.smt.arith.validate" -> BoolFieldType(),
      "z3.smt.array.extensional" -> BoolFieldType(),
      "z3.smt.array.weak" -> BoolFieldType(),
      "z3.smt.auto_config" -> BoolFieldType(),
      "z3.smt.bound_simplifier" -> BoolFieldType(),
      "z3.smt.bv.delay" -> BoolFieldType(),
      "z3.smt.bv.enable_int2bv" -> BoolFieldType(),
      "z3.smt.bv.reflect" -> BoolFieldType(),
      "z3.smt.bv.size_reduce" -> BoolFieldType(),
      "z3.smt.bv.solver" -> UnsignedIntFieldType(),
      "z3.smt.bv.watch_diseq" -> BoolFieldType(),
      "z3.smt.candidate_models" -> BoolFieldType(),
      "z3.smt.case_split" -> UnsignedIntFieldType(),
      "z3.smt.clause_proof" -> BoolFieldType(),
      "z3.smt.core.extend_nonlocal_patterns" -> BoolFieldType(),
      "z3.smt.core.extend_patterns" -> BoolFieldType(),
      "z3.smt.core.extend_patterns.max_distance" -> UnsignedIntFieldType(),
      "z3.smt.core.minimize" -> BoolFieldType(),
      "z3.smt.core.validate" -> BoolFieldType(),
      "z3.smt.cube_depth" -> UnsignedIntFieldType(),
      "z3.smt.dack" -> UnsignedIntFieldType(),
      "z3.smt.dack.eq" -> BoolFieldType(),
      "z3.smt.dack.factor" -> DoubleFieldType(),
      "z3.smt.dack.gc" -> UnsignedIntFieldType(),
      "z3.smt.dack.gc_inv_decay" -> DoubleFieldType(),
      "z3.smt.dack.threshold" -> UnsignedIntFieldType(),
      "z3.smt.delay_units" -> BoolFieldType(),
      "z3.smt.delay_units_threshold" -> UnsignedIntFieldType(),
      "z3.smt.dt_lazy_splits" -> UnsignedIntFieldType(),
      "z3.smt.elim_unconstrained" -> BoolFieldType(),
      "z3.smt.ematching" -> BoolFieldType(),
      "z3.smt.induction" -> BoolFieldType(),
      "z3.smt.lemma_gc_strategy" -> UnsignedIntFieldType(),
      "z3.smt.logic" -> StringFieldType(),
      "z3.smt.macro_finder" -> BoolFieldType(),
      "z3.smt.max_conflicts" -> UnsignedIntFieldType(),
      "z3.smt.mbqi" -> BoolFieldType(),
      "z3.smt.mbqi.force_template" -> UnsignedIntFieldType(),
      "z3.smt.mbqi.id" -> StringFieldType(),
      "z3.smt.mbqi.max_cexs" -> UnsignedIntFieldType(),
      "z3.smt.mbqi.max_cexs_incr" -> UnsignedIntFieldType(),
      "z3.smt.mbqi.max_iterations" -> UnsignedIntFieldType(),
      "z3.smt.mbqi.trace" -> BoolFieldType(),
      "z3.smt.pb.conflict_frequency" -> UnsignedIntFieldType(),
      "z3.smt.pb.learn_complements" -> BoolFieldType(),
      "z3.smt.phase_caching_off" -> UnsignedIntFieldType(),
      "z3.smt.phase_caching_on" -> UnsignedIntFieldType(),
      "z3.smt.phase_selection" -> UnsignedIntFieldType(),
      "z3.smt.propagate_values" -> BoolFieldType(),
      "z3.smt.pull_nested_quantifiers" -> BoolFieldType(),
      "z3.smt.q.lift_ite" -> UnsignedIntFieldType(),
      "z3.smt.q.lite" -> BoolFieldType(),
      "z3.smt.qi.cost" -> StringFieldType(),
      "z3.smt.qi.eager_threshold" -> DoubleFieldType(),
      "z3.smt.qi.lazy_threshold" -> DoubleFieldType(),
      "z3.smt.qi.max_instances" -> UnsignedIntFieldType(),
      "z3.smt.qi.max_multi_patterns" -> UnsignedIntFieldType(),
      "z3.smt.qi.profile" -> BoolFieldType(),
      "z3.smt.qi.profile_freq" -> UnsignedIntFieldType(),
      "z3.smt.qi.quick_checker" -> UnsignedIntFieldType(),
      "z3.smt.qsat_use_qel" -> BoolFieldType(),
      "z3.smt.quasi_macros" -> BoolFieldType(),
      "z3.smt.random_seed" -> UnsignedIntFieldType(),
      "z3.smt.refine_inj_axioms" -> BoolFieldType(),
      "z3.smt.relevancy" -> UnsignedIntFieldType(),
      "z3.smt.restart.max" -> UnsignedIntFieldType(),
      "z3.smt.restart_factor" -> DoubleFieldType(),
      "z3.smt.restart_strategy" -> UnsignedIntFieldType(),
      "z3.smt.restricted_quasi_macros" -> BoolFieldType(),
      "z3.smt.seq.max_unfolding" -> UnsignedIntFieldType(),
      "z3.smt.seq.min_unfolding" -> UnsignedIntFieldType(),
      "z3.smt.seq.split_w_len" -> BoolFieldType(),
      "z3.smt.seq.validate" -> BoolFieldType(),
      "z3.smt.solve_eqs" -> BoolFieldType(),
      "z3.smt.str.aggressive_length_testing" -> BoolFieldType(),
      "z3.smt.str.aggressive_unroll_testing" -> BoolFieldType(),
      "z3.smt.str.aggressive_value_testing" -> BoolFieldType(),
      "z3.smt.str.fast_length_tester_cache" -> BoolFieldType(),
      "z3.smt.str.fast_value_tester_cache" -> BoolFieldType(),
      "z3.smt.str.fixed_length_naive_cex" -> BoolFieldType(),
      "z3.smt.str.fixed_length_refinement" -> BoolFieldType(),
      "z3.smt.str.overlap_priority" -> DoubleFieldType(),
      "z3.smt.str.regex_automata_difficulty_threshold" -> UnsignedIntFieldType(),
      "z3.smt.str.regex_automata_failed_automaton_threshold" -> UnsignedIntFieldType(),
      "z3.smt.str.regex_automata_failed_intersection_threshold" -> UnsignedIntFieldType(),
      "z3.smt.str.regex_automata_intersection_difficulty_threshold" -> UnsignedIntFieldType(),
      "z3.smt.str.regex_automata_length_attempt_threshold" -> UnsignedIntFieldType(),
      "z3.smt.str.string_constant_cache" -> BoolFieldType(),
      "z3.smt.str.strong_arrangements" -> BoolFieldType(),
      "z3.smt.string_solver" -> EnumFieldType("seq"),
      "z3.smt.theory_aware_branching" -> BoolFieldType(),
      "z3.smt.theory_case_split" -> BoolFieldType(),
      "z3.smt.threads" -> UnsignedIntFieldType(),
      "z3.smt.threads.cube_frequency" -> UnsignedIntFieldType(),
      "z3.smt.threads.max_conflicts" -> UnsignedIntFieldType(),
      "z3.smt.up.persist_clauses" -> BoolFieldType(),
  )

  def fromStrings(input: Map[String, String]): Either[String, Map[String, Object]] = {
    val parsed = input.toList.map({ case (k, v) => mapKV(k, v) })
    val (errors, noErrors) = parsed.partition(_.isLeft)
    if (errors.isEmpty) {
      Right(noErrors.collect({ case Right(kv) => kv }).toMap)
    } else {
      Left(errors.mkString("; "))
    }
  }

  private def mapKV(key: String, value: String): Either[String, (String, Object)] = {
    fieldTypes.get(key) match {
      case Some(StringFieldType()) =>
        Right((key, value.asInstanceOf[Object]))

      case Some(IntFieldType()) =>
        value.toIntOption.toRight(s"Non-integer value $value for $key").map(v => (key, v.asInstanceOf[Object]))

      case Some(UnsignedIntFieldType()) =>
        // even though Z3 has some parameters that are unsigned 32-bit integers, the Java API only supports signed integers
        value.toIntOption match {
          case Some(v) if v >= 0 => Right((key, v.asInstanceOf[Object]))
          case _                 => Left(s"Expected an unsigned integer for $key, but got $value")
        }

      case Some(BoolFieldType()) =>
        value.toBooleanOption.toRight(s"Non-Boolean value $value for $key").map(v => (key, v.asInstanceOf[Object]))

      case Some(DoubleFieldType()) =>
        Right((key, value.toDouble.asInstanceOf[Object]))

      case Some(EnumFieldType(values @ _*)) =>
        if (values.contains(value)) {
          Right((key, value))
        } else {
          Left(s"Invalid value $value for $key, expected one of ${values.mkString(", ")}")
        }

      case Some(RegexFieldType()) =>
        parseRegex(value).map((key, _))

      case _ =>
        Left(s"Unexpected field $key")
    }
  }

  private def parseRegex(r: String): Either[String, String] = {
    try {
      Pattern.compile(r)
      Right(r)
    } catch {
      case e: PatternSyntaxException =>
        Left(s"Invalid regex $r: ${e.getMessage}")
    }
  }
}
