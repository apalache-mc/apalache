1c1
< --------------------------- MODULE BinSearch1 ---------------------------------
---
> --------------------------- MODULE BinSearch2 ---------------------------------
4a5
>  * Version 2. The base case, no loop.
31c32,46
< \* How the can we start?
---
> VARIABLES
>     \* The low end of the search interval (inclusive).
>     \* @type: Int;
>     low,
>     \* The high end of the search interval (inclusive).
>     \* @type: Int;
>     high,
>     \* Did the algorithm terminate.
>     \* @type: Bool;
>     isTerminated,
>     \* The result when terminated.
>     \* @type: Int;
>     returnValue
> 
> \* Initialization step (lines 2-3)
33c48,51
<     TRUE    \* don't care
---
>     /\ low = 0
>     /\ high = Len(INPUT_SEQ) - 1
>     /\ isTerminated = FALSE
>     /\ returnValue = 0
35c53
< \* How can we make a step?
---
> \* Computation step (lines 5-16)
37c55,64
<     TRUE    \* don't care
---
>     IF ~isTerminated
>     THEN IF low <= high
>       THEN          \* lines 6-14: not implemented yet
>         UNCHANGED <<low, high, isTerminated, returnValue>>
>       ELSE          \* line 16
>         /\ isTerminated' = TRUE
>         /\ returnValue' = -(low + 1)
>         /\ UNCHANGED <<low, high>>
>     ELSE            \* isTerminated
>       UNCHANGED <<low, high, returnValue, isTerminated>>
