on:
  # Every pull request
  pull_request:
  #  Pushes into the trunk
  #  This is important to ensure the trunk is not broken and
  #  to populate the cache for future PRs.
  #  See https://github.community/t/actions-cache-cache-not-being-hit-despite-of-being-present/17956/3
  push:
    branches:
      - unstable

name: build

jobs:
  build-mdbook:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup mdBook
        uses: peaceiris/actions-mdbook@v1
        with:
          mdbook-version: "0.4.5"

      - name: Compile mdBook
        run: |
          cd docs
          mdbook build

  format-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Check formatting
        run: make fmt-check

  unit-tests:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      # Allows other OS tests to proceed even if one fails
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
            ${{ runner.os }}-
      - name: Build and Unit Test
        run: mvn --batch-mode --no-transfer-progress test

  integration-tests:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      # Allows other OS tests to proceed even if one fails
      fail-fast: false
      matrix:
        # Pinned to maxos-10 as temp workaround for https://github.com/cachix/install-nix-action/issues/96
        operating-system: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
            ${{ runner.os }}-
      - name: Cache nix store
        # Workaround for cache action not playing well with permissions
        # See https://github.com/actions/cache/issues/324
        uses: john-shaffer/cache@59429c0461095f341a8cf7388e5d3aef37b95edd
        with:
          path: |
            /nix/store
            /nix/var/nix/profiles
          key: ${{ runner.os }}-nix-${{ hashFiles('**.nix') }}
          restore-keys: |
            ${{ runner.os }}-nix-
            ${{ runner.os }}-
      - name: Install Nix
        uses: cachix/install-nix-action@v14.1
        with:
          install_url: https://nixos-nix-install-tests.cachix.org/serve/vij683ly7sl95nnhb67bdjjfabclr85m/install
          install_options: "--tarball-url-prefix https://nixos-nix-install-tests.cachix.org/serve"
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - name: Build dev-shell
        run: nix develop -c bash -c exit
      - name: Build apalache
        run: nix develop -c make build-quick
      - name: Run integration tests
        run: nix develop -c ./test/run-integration

  docker-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache nix store
        # Workaround for cache action not playing well with permissions
        # See https://github.com/actions/cache/issues/324
        uses: john-shaffer/cache@59429c0461095f341a8cf7388e5d3aef37b95edd
        with:
          path: |
            /nix/store
            /nix/var/nix/profiles
          key: ${{ runner.os }}-nix-${{ hashFiles('**.nix') }}
          restore-keys: |
            ${{ runner.os }}-nix-
            ${{ runner.os }}-
      - name: Install Nix
        uses: cachix/install-nix-action@v14
        with:
          install_url: https://nixos-nix-install-tests.cachix.org/serve/vij683ly7sl95nnhb67bdjjfabclr85m/install
          install_options: "--tarball-url-prefix https://nixos-nix-install-tests.cachix.org/serve"
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - name: Build dev-shell
        run: nix develop -c bash -c exit
      - name: Build the docker image
        run: docker build -t informalsystems/apalache:ci .
      - name: Run integration tests in docker container
        run: nix develop -c ./test/run-integration
        env:
          USE_DOCKER: true
          APALACHE_TAG: ci
